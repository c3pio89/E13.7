/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";var e={"./src/style.css":(e,t,o)=>{o.r(t)},"./src/math.js":(e,t,o)=>{o.r(t),o.d(t,{multiply:()=>r,sum:()=>n});const n=(e,t)=>e+t,r=e=>3.14*e}},t={};function o(n){var r=t[n];if(void 0!==r)return r.exports;var d=t[n]={exports:{}};return e[n](d,d.exports,o),d.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{o.r(n);o("./src/style.css");var e=o("./src/math.js");!function(){const t=document.createElement("div");t.textContent="ES6 modules!",document.body.appendChild(t);const o=document.createElement("div");o.textContent="sum = "+e.sum(2,3),document.body.appendChild(o);const n=document.createElement("div");n.textContent="multiply from index.js = "+8*5,document.body.appendChild(n);const r=document.createElement("div");r.textContent="multiply from math = "+e.multiply(5),document.body.appendChild(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiO2lJQUFPLE1BQU1BLEVBQU0sQ0FBQ0MsRUFBR0MsSUFBTUQsRUFBSUMsRUFHcEJDLEVBQVlGLEdBRmQsS0FFb0JBLElDRjNCRyxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWFFLFFBR3JCLElBQUlDLEVBQVNOLEVBQXlCRSxHQUFZLENBR2pERyxRQUFTLENBQUMsR0FPWCxPQUhBRSxFQUFvQkwsR0FBVUksRUFBUUEsRUFBT0QsUUFBU0osR0FHL0NLLEVBQU9ELE9BQ2YsQ0NyQkFKLEVBQW9CTyxFQUFJLENBQUNILEVBQVNJLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFIsRUFBb0JVLEVBQUVGLEVBQVlDLEtBQVNULEVBQW9CVSxFQUFFTixFQUFTSyxJQUM1RUUsT0FBT0MsZUFBZVIsRUFBU0ssRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRULEVBQW9CVSxFQUFJLENBQUNLLEVBQUtDLElBQVVMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2xGaEIsRUFBb0JvQixFQUFLaEIsSUFDSCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ1gsT0FBT0MsZUFBZVIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFosT0FBT0MsZUFBZVIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEdBQU8sdUVDQTlELFdBQ0UsTUFBTUMsRUFBZ0JDLFNBQVNDLGNBQWMsT0FDN0NGLEVBQWNHLFlBQWMsZUFDNUJGLFNBQVNHLEtBQUtDLFlBQVlMLEdBRTFCLE1BQU1NLEVBQW1CTCxTQUFTQyxjQUFjLE9BQ2hESSxFQUFpQkgsWUFBYyxTQUFXLE1BQVMsRUFBRyxHQUN0REYsU0FBU0csS0FBS0MsWUFBWUMsR0FFMUIsTUFBTUMsRUFBMkJOLFNBQVNDLGNBQWMsT0FDeERLLEVBQXlCSixZQUFjLDRCQVpiLEVBWW9ELEVBQzlFRixTQUFTRyxLQUFLQyxZQUFZRSxHQUUxQixNQUFNQyxFQUEwQlAsU0FBU0MsY0FBYyxPQUN2RE0sRUFBd0JMLFlBQWMsd0JBQTBCLFdBQWMsR0FDOUVGLFNBQVNHLEtBQUtDLFlBQVlHLEVBQzVCLENBRUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZTEyLjMvLi9zcmMvbWF0aC5qcyIsIndlYnBhY2s6Ly9lMTIuMy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9lMTIuMy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vZTEyLjMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9lMTIuMy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL2UxMi4zLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzdW0gPSAoYSwgYikgPT4gYSArIGI7XG5jb25zdCBQSSA9IDMuMTQ7XG5cbmV4cG9ydCBjb25zdCBtdWx0aXBseSA9IChhKSA9PiBhKlBJOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgKiBhcyBtYXRoIGZyb20gJy4vbWF0aCc7XG5cbmNvbnN0IG11bHRpcGx5ID0gKGEpID0+IGEgKiA4O1xuXG5mdW5jdGlvbiByZW5kZXIoKSB7XG4gIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgb3V0cHV0RWxlbWVudC50ZXh0Q29udGVudCA9ICdFUzYgbW9kdWxlcyEnO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG91dHB1dEVsZW1lbnQpO1xuXG4gIGNvbnN0IHN1bVJlc3VsdEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgc3VtUmVzdWx0RWxlbWVudC50ZXh0Q29udGVudCA9ICdzdW0gPSAnICsgbWF0aC5zdW0oMiwgMyk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc3VtUmVzdWx0RWxlbWVudCk7XG5cbiAgY29uc3QgbXVsdGlwbHlGcm9tSW5kZXhFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG11bHRpcGx5RnJvbUluZGV4RWxlbWVudC50ZXh0Q29udGVudCA9ICdtdWx0aXBseSBmcm9tIGluZGV4LmpzID0gJyArIG11bHRpcGx5KDUpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG11bHRpcGx5RnJvbUluZGV4RWxlbWVudCk7XG5cbiAgY29uc3QgbXVsdGlwbHlGcm9tTWF0aEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbXVsdGlwbHlGcm9tTWF0aEVsZW1lbnQudGV4dENvbnRlbnQgPSAnbXVsdGlwbHkgZnJvbSBtYXRoID0gJyArIG1hdGgubXVsdGlwbHkoNSk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobXVsdGlwbHlGcm9tTWF0aEVsZW1lbnQpO1xufVxuXG5yZW5kZXIoKTtcblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgbW9kdWxlLmhvdC5hY2NlcHQoJy4vc3R5bGUuY3NzJywgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCfQodGC0LjQu9C4INC+0LHQvdC+0LLQu9C10L3RiyEnKTtcbiAgfSk7XG5cbiAgbW9kdWxlLmhvdC5hY2NlcHQoJy4vbWF0aCcsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygn0JzQvtC00YPQu9GMIG1hdGgg0L7QsdC90L7QstC70LXQvSEnKTtcbiAgICBkb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICcnO1xuICAgIHJlbmRlcigpO1xuICB9KTtcbn1cbiJdLCJuYW1lcyI6WyJzdW0iLCJhIiwiYiIsIm11bHRpcGx5IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJvdXRwdXRFbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidGV4dENvbnRlbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJzdW1SZXN1bHRFbGVtZW50IiwibXVsdGlwbHlGcm9tSW5kZXhFbGVtZW50IiwibXVsdGlwbHlGcm9tTWF0aEVsZW1lbnQiLCJyZW5kZXIiXSwic291cmNlUm9vdCI6IiJ9